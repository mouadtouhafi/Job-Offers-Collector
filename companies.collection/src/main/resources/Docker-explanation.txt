/*
	Explaining the following code :
*/

services:
  postgres:
    image: postgres:16
    container_name: jobs-container
    restart: unless-stopped
    environment:
      POSTGRES_DB: jobsdb1
      POSTGRES_USER: mouadthf
      POSTGRES_PASSWORD: MDTHF1997
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
volumes:
  pgdata:

  
/*
	This is a Docker Compose configuration for running a PostgreSQL database container.
	- Services : defines the services (containers) we want Docker Compose to run. Here in our case, we have one service: postgres.
	- postgres: this is the name of the service. It can be used to reference this container from other services in the same 
	  Docker Compose network.
	- image: postgres:16 : this line specifies the Docker image to use.
		postgres → official PostgreSQL image from Docker Hub.
		16 → version 16 of PostgreSQL.
	- container_name : specifies the name of the container.
	- restart: unless-stopped : this line defines the restart policy, the container will automatically restart unless we 
	  explicitly stop it.
	- environment : defines the environment variables.
	- ports: this maps ports from the container to our host machine.
		"5432:5432" → maps container’s port 5432 (default PostgreSQL port) to our host port 5432.
		This allows us to connect to PostgreSQL from our host machine.
	- volumes: this mounts persistent storage so that data isn’t lost when the container is removed:
		pgdata:/var/lib/postgresql/data → uses a Docker volume named pgdata to store PostgreSQL data inside the 
		container at /var/lib/postgresql/data.
	- volumes: (bottom section) this defines named Docker volumes. Here:
		pgdata: → the volume used above to persist database data.
*/


/*
	- pgdata : Postgresql named volume.
	- Docker volumes are a powerful feature that allows us to persist data generated by and used by Docker containers. 
	  When working with PostgreSQL in Docker, volumes are essential for ensuring that your database data is not lost 
	  when the container stops or is removed.
*/









